<%- include ("header.ejs") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .profile-container {
            max-width: 600px;
            margin: 50px auto;
            background: #fff;
            padding: 30px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 8px;
        }
        .profile-container h1 {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <h1>User Profile</h1>
        <form id="profileForm" action="/update-profile" method="POST">
            <div class="form-group">
                <input type="hidden" name="userId" value="<%= user._id %>">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" class="form-control" value="<%= user.username %>">
                <!-- Error message placeholder for username -->
                <div class="invalid-feedback"></div>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" class="form-control" value="<%= user.email %>">
                <!-- Error message placeholder for email -->
                <div class="invalid-feedback"></div>
            </div>
            <div class="form-group">
                <label for="phone">Phone:</label>
                <input type="text" id="phone" name="phone" class="form-control" value="<%= user.phone %>">
                <!-- Error message placeholder for phone -->
                <div class="invalid-feedback"></div>
            </div>
            <button type="submit" class="btn btn-primary">Update Profile</button>
        </form>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.all.min.js"></script>
    <script>
    document.getElementById('profileForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission
    
        const form = event.target;
        const formData = new FormData(form);
    
        // Convert FormData to a plain object
        const formDataObj = {};
        formData.forEach((value, key) => {
            formDataObj[key] = value;
        });
    
        // Clear previous errors
        document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
        document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
    
        fetch(form.action, {
            method: form.method,
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formDataObj)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show SweetAlert for successful update
                Swal.fire({
                    icon: 'success',
                    title: 'Profile Updated',
                    text: data.message,
                }).then((result) => {
                    // Redirect to profile page after clicking OK
                    if (result.isConfirmed) {
                        window.location.href = "/profile"; // Change to the URL of your profile page
                    }
                });
            } else {
                // Show SweetAlert warning for validation errors
                Swal.fire({
                    icon: 'warning',
                    title: 'Validation Errors',
                    html: data.errors.map(error => error.msg).join('<br>'),
                    confirmButtonText: 'OK',
                });
                
                // Show validation errors if update failed
                data.errors.forEach(error => {
                    const field = document.querySelector(`[name="${error.param}"]`);
                    if (field) {
                        field.classList.add('is-invalid');
                        const errorDiv = field.nextElementSibling; // Get the next sibling which is the error message placeholder
                        errorDiv.textContent = error.msg; // Set the error message
                    }
                });
            }
        })
        .catch(error => {
            // Show error message if there's an unexpected error
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An unexpected error occurred. Please try again later.',
            });
        });
    });
    </script>
</body>
</html>

<%- include ("footer.ejs") %>
