<%- include('header.ejs') %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- BREADCRUMB -->
<div id="breadcrumb" class="section">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <ul class="breadcrumb-tree">
                    <li><a href="/">Home</a></li>
                    <li><a href="#">All Categories</a></li>
                    <li><a href="#">Accessories</a></li>
                    <li class="active"><%= categories[0].name %> (<%= totalResults %> Results)</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- /BREADCRUMB -->

<!-- SECTION -->
<div class="section">
    <div class="container">
        <div class="row">
            <!-- ASIDE -->
            <div id="aside" class="col-md-3">
				<div class="aside">
					<h3 class="aside-title">Categories</h3>
					<div class="checkbox-filter">
						<% categories.forEach(function(category, index) { %>
							<div class="input-checkbox">
								<input type="checkbox" id="category-<%= index + 1 %>" class="category-checkbox" data-category-id="<%= category._id %>">
								<label for="category-<%= index + 1 %>">
									<span></span>
									<%= category.name %> (<%= category.productCount %>)
								</label>
							</div>
						<% }); %>
					</div>
				</div>
				
				
				
				
                <div class="aside">
                    <h3 class="aside-title">Price</h3>
                    <div class="price-filter">
                        <div id="price-slider"></div>
                        <div class="input-number price-min">
                            <input id="price-min" type="number">
                            <span class="qty-up">+</span>
                            <span class="qty-down">-</span>
                        </div>
                        <span>-</span>
                        <div class="input-number price-max">
                            <input id="price-max" type="number" value="<%= maxPrice %>">
                            <span class="qty-up">+</span>
                            <span class="qty-down">-</span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /ASIDE -->

            <!-- STORE -->
            <div id="store" class="col-md-9">
                <div class="row" id="product-container">
                    <% products.forEach(function(product, index) { %>
                        <div class="col-md-4 col-xs-6 product-item">
                            <div class="product">
                                <a href="/product/<%= product._id %>">
                                    <div class="product-img">
                                        <img src="<%= product.image[0] %>" alt="" class="img-responsive">
                                        <div class="product-label">
                                            <%= product.sale ? `<span class="sale">-${product.sale}%</span>` : '' %>
                                            <span class="new">NEW</span>
                                        </div>
                                    </div>
                                </a>
                                <div class="product-body">
                                    <p class="product-category"><%= product.category.name %></p>
                                    <h3 class="product-name"><a href="/product/<%= product._id %>"><%= product.name %></a></h3>
                                    <h4 class="product-price">
                                        ₹<%= product.sale ? (product.price * (1 - product.sale / 100)).toFixed(2) : product.price.toFixed(2) %>
                                        <%= product.sale ? `<br><span class="product-old-price">₹${product.price.toFixed(2)}</span>` : '' %>
                                    </h4>
                                    <div class="product-btns">
                                        <button class="add-to-wishlist" data-product-id="<%= product._id %>">
                                            <i class="fa fa-heart-o wishlist-icon"></i>
                                            <span class="tooltipp">add to wishlist</span>
                                        </button>
                                        <button class="add-to-compare"><i class="fa fa-exchange"></i>
                                            <span class="tooltipp">add to compare</span>
                                        </button>
                                        <button class="quick-view"><i class="fa fa-eye"></i>
                                            <span class="tooltipp">quick view</span>
                                        </button>
                                    </div>
                                </div>
                                <div class="add-to-cart">
                                    <button class="add-to-cart-btn" data-product-id="<%= product._id %>">
                                        <i class="fa fa-shopping-cart"></i> add to cart
                                    </button>
                                </div>
                            </div>
                        </div>
                        <% if ((index + 1) % 3 === 0) { %>
                            <div class="clearfix visible-md visible-lg"></div>
                        <% } %>
                    <% }); %>
                </div>
            </div>

            <!-- store bottom filter -->
            <div class="store-filter clearfix">
                <span class="store-qty">Showing <%= showingFrom %>-<%= showingTo %> products</span>
                <ul class="store-pagination">
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <li class="<%= i === parseInt(currentPage) ? 'active' : '' %>">
                            <a href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- /SECTION -->

<%- include('footer.ejs') %>

<script>
document.addEventListener("DOMContentLoaded", function() {
    // Function to fetch products based on filters
    const fetchFilteredProducts = async () => {
        const selectedCategories = Array.from(document.querySelectorAll('.category-checkbox:checked')).map(cb => cb.getAttribute('data-category-id'));
        const minPrice = document.getElementById('price-min').value;
        const maxPrice = document.getElementById('price-max').value;
        const queryString = `?categories=${selectedCategories.join(',')}&minPrice=${minPrice}&maxPrice=${maxPrice}`;

        try {
            const response = await fetch(`/api/products${queryString}`);
            const data = await response.json();
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = ''; // Clear current products

            data.products.forEach((product, index) => {
                const productElement = `
                    <div class="col-md-4 col-xs-6 product-item">
                        <div class="product">
                            <a href="/product/${product._id}">
                                <div class="product-img">
                                    <img src="${product.image[0]}" alt="" class="img-responsive">
                                    <div class="product-label">
                                        ${product.sale ? `<span class="sale">-${product.sale}%</span>` : ''}
                                        <span class="new">NEW</span>
                                    </div>
                                </div>
                            </a>
                            <div class="product-body">
                                <p class="product-category">${product.category.name}</p>
                                <h3 class="product-name"><a href="/product/${product._id}">${product.name}</a></h3>
                                <h4 class="product-price">
                                    ₹${product.sale ? (product.price * (1 - product.sale / 100)).toFixed(2) : product.price.toFixed(2)}
                                    ${product.sale ? `<br><span class="product-old-price">₹${product.price.toFixed(2)}</span>` : ''}
                                </h4>
                                <div class="product-btns">
                                    <button class="add-to-wishlist" data-product-id="${product._id}">
                                        <i class="fa fa-heart-o wishlist-icon"></i>
                                        <span class="tooltipp">add to wishlist</span>
                                    </button>
                                    <button class="add-to-compare"><i class="fa fa-exchange"></i>
                                        <span class="tooltipp">add to compare</span>
                                    </button>
                                    <button class="quick-view"><i class="fa fa-eye"></i>
                                        <span class="tooltipp">quick view</span>
                                    </button>
                                </div>
                            </div>
                            <div class="add-to-cart">
                                <button class="add-to-cart-btn" data-product-id="${product._id}">
                                    <i class="fa fa-shopping-cart"></i> add to cart
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                productContainer.insertAdjacentHTML('beforeend', productElement);

                // If the index + 1 is a multiple of 3, add a clearfix div
                if ((index + 1) % 3 === 0) {
                    productContainer.insertAdjacentHTML('beforeend', '<div class="clearfix visible-md visible-lg"></div>');
                }
            });

            // Re-attach event listeners for new product items
            attachEventListeners();
        } catch (error) {
            console.error('Error fetching filtered products:', error);
        }
    };

    // Function to attach event listeners to wishlist and cart buttons
    const attachEventListeners = () => {
        document.querySelectorAll('.add-to-wishlist').forEach(button => {
            button.addEventListener('click', async (event) => {
                event.preventDefault();
                const productId = button.getAttribute('data-product-id');
                try {
                    const response = await fetch(`/wishlist/add/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    if (data.success) {
                        if (data.message === 'Product already in wishlist.') {
                            console.log('Product already in wishlist.');
                        } else {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Wishlist!',
                                text: 'Product added to wishlist successfully.'
                            });
                            const wishlistIcon = button.querySelector('.wishlist-icon');
                            wishlistIcon.classList.remove('fa-heart-o');
                            wishlistIcon.classList.add('fa-heart');
                        }
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to add product to wishlist.'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to add product to wishlist.'
                    });
                }
            });
        });

        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', async (event) => {
                event.preventDefault();
                const productId = button.getAttribute('data-product-id');
                try {
                    const response = await fetch(`/cart/add/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ quantity: 1 })
                    });
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            text: 'Product added to cart successfully.'
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to add product to cart.'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to add product to cart.'
                    });
                }
            });
        });
    };

    // Event listeners for filter changes
    document.querySelectorAll('.category-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', fetchFilteredProducts);
    });

    const priceInputs = document.querySelectorAll('#price-min, #price-max');
    priceInputs.forEach(input => {
        input.addEventListener('change', fetchFilteredProducts);
    });

    const priceSlider = document.getElementById('price-slider');
    if (priceSlider) {
        const maxPrice = <%= maxPrice %> || 9999; // Assuming a default value if maxPrice is not defined

        noUiSlider.create(priceSlider, {
            start: [1, maxPrice],
            connect: true,
            step: 1,
            range: {
                'min': 1,
                'max': maxPrice
            }
        });

        priceSlider.noUiSlider.on('update', function(values, handle) {
            const value = values[handle];
            handle ? document.getElementById('price-max').value = value : document.getElementById('price-min').value = value;
            fetchFilteredProducts();
        });
    }

    // Input number controls
    document.querySelectorAll('.input-number').forEach(function(inputWrapper) {
        const input = inputWrapper.querySelector('input[type="number"]');
        const up = inputWrapper.querySelector('.qty-up');
        const down = inputWrapper.querySelector('.qty-down');

        down.addEventListener('click', function () {
            let value = parseInt(input.value) - 1;
            value = value < 1 ? 1 : value;
            input.value = value;
            input.dispatchEvent(new Event('change'));
        });

        up.addEventListener('click', function () {
            let value = parseInt(input.value) + 1;
            input.value = value;
            input.dispatchEvent(new Event('change'));
        });
    });

    // Attach initial event listeners
    attachEventListeners();
});
</script>
<%- include('footer.ejs') %>
